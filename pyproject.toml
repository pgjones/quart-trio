[tool.poetry]
name = "quart-trio"
version = "0.9.1"
description = "A Quart extension to provide trio support"
authors = ["pgjones <philip.graham.jones@googlemail.com>"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
include = ["src/quart_trio/py.typed"]
license = "MIT"
readme = "README.rst"
repository = "https://github.com/pgjones/quart-trio/"

[tool.black]
line-length = 100
target-version = ["py37"]

[tool.isort]
combine_as_imports = true
force_grid_wrap = 0
include_trailing_comma = true
known_first_party = "quart_trio, tests"
line_length = 100
multi_line_output = 3
no_lines_before = "LOCALFOLDER"
order_by_type = false
reverse_relative = true

[tool.mypy]
allow_redefinition = true
disallow_any_generics = false
disallow_subclassing_any = true
disallow_untyped_calls = false
disallow_untyped_defs = true
implicit_reexport = true
no_implicit_optional = true
plugins = "trio_typing.plugin"
show_error_codes = true
strict = true
strict_equality = true
strict_optional = false
warn_redundant_casts = true
warn_return_any = false
warn_unused_configs = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module =["trio.*"]
ignore_missing_imports = true

[tool.poetry.dependencies]
pydata_sphinx_theme = { version = "*", optional = true }
python = ">=3.7"
hypercorn = { version = ">=0.12.0", extras = ["trio"] }
quart = ">=0.18"
trio = ">=0.9.0"

[tool.poetry.dev-dependencies]
tox = "*"

[tool.poetry.extras]
docs = ["pydata_sphinx_theme"]

[tool.pytest.ini_options]
addopts = "--no-cov-on-fail --showlocals --strict-markers"
testpaths = ["tests"]

[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
